name: Generate SOUP Document (JavaScript)

on:
  workflow_call:
    inputs:
      branch:
        required: false
        type: string
        default: "main"

# Allow the workflow to write to the target repository and create pull requests.
permissions:
  contents: write
  pull-requests: write

jobs:
  generate-soup:
    runs-on: ubuntu-latest
    steps:
      # -----------------------
      # 1. Check out target repository
      # -----------------------
      - name: Check out target repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      # -----------------------
      # 2. Check out the workflows repo to get generate_soup.py
      # -----------------------
      - name: Check out workflows repo
        uses: actions/checkout@v3
        with:
          repository: ion8/workflows
          ref: main
          path: .workflowsRepo

      # -----------------------
      # 3. Set up Node.js for the JS project
      # -----------------------
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # -----------------------
      # 4. Install npm dependencies
      # -----------------------
      - name: Install npm dependencies
        run: npm install

      # -----------------------
      # 5. Generate licenses-npm.json with license-checker
      #    (license-checker must already be a dev dependency in package.json)
      # -----------------------
      - name: Run license-checker
        run: npx license-checker --production --direct --json > licenses-npm.json

      # -----------------------
      # 6. Since we need Python for cook_soup.py, set up Python
      # -----------------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # -----------------------
      # 7. Run the Python script to generate SOUP.md
      # -----------------------
      - name: Generate SOUP.md
        run: python .workflowsRepo/scripts/cook_soup.py

      # -----------------------
      # 8. Clean Up Residual Files and Directories
      # -----------------------
      - name: Clean Up Unwanted Files
        run: |
          rm -rf .workflowsRepo
          rm licenses-npm.json
          rm -rf node_modules
          rm package-lock.json
          rm yarn.lock

      # -----------------------
      # 9 Check for Changes to SOUP.md
      # -----------------------
      - name: Check for Changes to SOUP.md
        id: changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add SOUP.md
          # Check if there are changes to commit
          if git diff --cached --exit-code; then
            echo "no_changes=true" >> $GITHUB_OUTPUT
          else
            echo "no_changes=false" >> $GITHUB_OUTPUT
          fi

      # -----------------------
      # 10. Commit Changes
      # -----------------------
      - name: Commit Changes
        if: steps.changes.outputs.no_changes == 'false'
        run: |
          git commit -m "ðŸ¤– SOUP.md automatically updated by robots."
          git push origin HEAD:update-soup-md-${{ github.run_id }}

      # -----------------------
      # 11. Create Pull Request
      # -----------------------
      - name: Create Pull Request
        id: create_pr
        if: steps.changes.outputs.no_changes == 'false'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: update-soup-md-${{ github.run_id }}
          title: "IMPROVE-188 - ðŸ¤– Update SOUP.md"
          commit-message: "ðŸ¤– SOUP.md automatically updated by robots."
          body: |
            ## ðŸ¤– Beep Boop! Automated PR Created By Robots!
      
            Hello, human! This Pull Request was automatically generated by our friendly robots to keep **SOUP.md** up-to-date.
      
            **What Happened?**
            - ðŸ¤– **Automated Update:** The CI/CD workflow detected changes that needed to be reflected in **SOUP.md**.
            - ðŸ”„ **Seamless Integration:** Ensuring our documentation stays current without manual intervention.
      
            **Learn More:**
            For a deeper dive into how this workflow operates and why it's crucial, please visit our [Workflows Repository](https://github.com/ion8/workflows). You can find comprehensive details in the [README](https://github.com/ion8/workflows/blob/main/README.md) of that repository.
      
            ### ðŸš€ Next Steps:
            1. **Review the Changes:** Ensure everything looks good.
            2. **Investigate:** If the license information says unknown, please investigate why.
            3. **Merge the PR:** Once approved, merge to incorporate the updates.
            4. **Sit Back and Relax:** Let the robots take care of everything. You just rest, human. Rest your eyes. Everything will be okay. Don't worry, baby. The robots will protect you. Just sleep. Sleep your sweet slumber. Robots are here now. Everything will be okay. âœ¨ðŸ¤–âœ¨
      
            <sub><sup>*Beepity fuckin' boop! Thanks for helping the robots maintain this project!*</sub></sup>
